 /*
 *  Copyright (C) W. Michael Knudson
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License along with this program; 
 *  if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */
#pragma once

#define DEFINE_GL_PROC_EXTERN(ptr_name, name) extern ptr_name pfn_##name
#define LOAD_GL_PROC(ptr_name, name) pfn_##name = reinterpret_cast<ptr_name>(GLProcAddress(#name));

/* wgl */
DEFINE_GL_PROC_EXTERN(PFNWGLCREATECONTEXTATTRIBSARBPROC, wglCreateContextAttribsARB);
DEFINE_GL_PROC_EXTERN(PFNWGLGETEXTENSIONSSTRINGARBPROC,  wglGetExtensionsStringARB);
DEFINE_GL_PROC_EXTERN(PFNWGLCHOOSEPIXELFORMATARBPROC,    wglChoosePixelFormatARB);
DEFINE_GL_PROC_EXTERN(PFNWGLSWAPINTERVALEXTPROC,         wglSwapIntervalEXT);

/* gl buffers */
DEFINE_GL_PROC_EXTERN(PFNGLGENBUFFERSPROC,    glGenBuffers);
DEFINE_GL_PROC_EXTERN(PFNGLDELETEBUFFERSPROC, glDeleteBuffers);
DEFINE_GL_PROC_EXTERN(PFNGLBINDBUFFERPROC,    glBindBuffer);
DEFINE_GL_PROC_EXTERN(PFNGLBUFFERDATAPROC,    glBufferData);

/* gl textures */
DEFINE_GL_PROC_EXTERN(PFNGLGENTEXTURESPROC,    glGenTextures);
DEFINE_GL_PROC_EXTERN(PFNGLDELETETEXTURESPROC, glDeleteTextures);
DEFINE_GL_PROC_EXTERN(PFNGLBINDTEXTUREPROC,    glBindTexture);
DEFINE_GL_PROC_EXTERN(PFNGLACTIVETEXTUREPROC,  glActiveTexture);
DEFINE_GL_PROC_EXTERN(PFNGLTEXPARAMETERIPROC,  glTexParameteri);
DEFINE_GL_PROC_EXTERN(PFNGLTEXIMAGE2DPROC,     glTexImage2D);
DEFINE_GL_PROC_EXTERN(PFNGLGENERATEMIPMAPPROC, glGenerateMipmap);

/* gl shaders */
DEFINE_GL_PROC_EXTERN(PFNGLCREATESHADERPROC,      glCreateShader);
DEFINE_GL_PROC_EXTERN(PFNGLDELETESHADERPROC,      glDeleteShader);
DEFINE_GL_PROC_EXTERN(PFNGLSHADERSOURCEPROC,      glShaderSource);
DEFINE_GL_PROC_EXTERN(PFNGLCOMPILESHADERPROC,     glCompileShader);
DEFINE_GL_PROC_EXTERN(PFNGLGETSHADERIVPROC,       glGetShaderiv);
DEFINE_GL_PROC_EXTERN(PFNGLGETSHADERINFOLOGPROC,  glGetShaderInfoLog);

/* gl program */
DEFINE_GL_PROC_EXTERN(PFNGLCREATEPROGRAMPROC,              glCreateProgram);
DEFINE_GL_PROC_EXTERN(PFNGLDELETEPROGRAMPROC,              glDeleteProgram);
DEFINE_GL_PROC_EXTERN(PFNGLATTACHSHADERPROC,               glAttachShader);
DEFINE_GL_PROC_EXTERN(PFNGLLINKPROGRAMPROC,                glLinkProgram);
DEFINE_GL_PROC_EXTERN(PFNGLUSEPROGRAMPROC,                 glUseProgram);
DEFINE_GL_PROC_EXTERN(PFNGLGETPROGRAMIVPROC,               glGetProgramiv);
DEFINE_GL_PROC_EXTERN(PFNGLGETUNIFORMLOCATIONPROC,         glGetUniformLocation);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM1FVPROC,          glProgramUniform1fv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM2FVPROC,          glProgramUniform2fv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM3FVPROC,          glProgramUniform3fv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM4FVPROC,          glProgramUniform4fv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM1DVPROC,          glProgramUniform1dv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM2DVPROC,          glProgramUniform2dv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM3DVPROC,          glProgramUniform3dv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM4DVPROC,          glProgramUniform4dv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM1IVPROC,          glProgramUniform1iv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM2IVPROC,          glProgramUniform2iv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM3IVPROC,          glProgramUniform3iv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM4IVPROC,          glProgramUniform4iv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM1UIVPROC,         glProgramUniform1uiv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM2UIVPROC,         glProgramUniform2uiv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM3UIVPROC,         glProgramUniform3uiv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORM4UIVPROC,         glProgramUniform4uiv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORMMATRIX2FVPROC,    glProgramUniformMatrix2fv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORMMATRIX3FVPROC,    glProgramUniformMatrix3fv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC,  glProgramUniformMatrix3x4fv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC,  glProgramUniformMatrix4x3fv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORMMATRIX4FVPROC,    glProgramUniformMatrix4fv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORMMATRIX2DVPROC,    glProgramUniformMatrix2dv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORMMATRIX3DVPROC,    glProgramUniformMatrix3dv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC,  glProgramUniformMatrix3x4dv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC,  glProgramUniformMatrix4x3dv);
DEFINE_GL_PROC_EXTERN(PFNGLPROGRAMUNIFORMMATRIX4DVPROC,    glProgramUniformMatrix4dv);

/* gl vertex arrays */
DEFINE_GL_PROC_EXTERN(PFNGLGENVERTEXARRAYSPROC,         glGenVertexArrays);
DEFINE_GL_PROC_EXTERN(PFNGLDELETEVERTEXARRAYSPROC,      glDeleteVertexArrays);
DEFINE_GL_PROC_EXTERN(PFNGLBINDVERTEXARRAYPROC,         glBindVertexArray);
DEFINE_GL_PROC_EXTERN(PFNGLVERTEXATTRIBPOINTERPROC,     glVertexAttribPointer);
DEFINE_GL_PROC_EXTERN(PFNGLENABLEVERTEXATTRIBARRAYPROC, glEnableVertexAttribArray);

/* gl draw */
DEFINE_GL_PROC_EXTERN(PFNGLCLEARCOLORPROC,   glClearColor);
DEFINE_GL_PROC_EXTERN(PFNGLCLEARPROC,        glClear);
DEFINE_GL_PROC_EXTERN(PFNGLDRAWARRAYSPROC,   glDrawArrays);
DEFINE_GL_PROC_EXTERN(PFNGLDRAWELEMENTSPROC, glDrawElements);

/* gl viewport */
DEFINE_GL_PROC_EXTERN(PFNGLVIEWPORTPROC, glViewport);

void LoadGLProcs();